# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

   boot.loader.systemd-boot.enable = true;
   boot.loader.efi.canTouchEfiVariables = true;
   boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "mpt3sas" "nvme" "usbhid" "sd_mod" "cryptd" ];
   boot.initrd.kernelModules = [ "dm-snapshot" "usb_storage" ];
   boot.kernelPackages = pkgs.linuxPackages_xanmod;
   boot.kernel.sysctl = {
     "abi.vsyscall32" = 0;
  };
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/4ae1033e-153d-4264-9b80-4b63ea99e95a";
      fsType = "ext4";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/0d5a69b9-0c3d-4537-8391-db9d294ca6f4";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/B756-60A6";
      fsType = "vfat";
    };
    boot.initrd.luks.devices."cryptroot" = {
       device = "/dev/disk/by-uuid/2c565d63-925c-4041-8172-a0e652c3eb6a";
       #https://nixos.wiki/wiki/Full_Disk_Encryption for some future day :(
       #allowDiscards = true;
       #keyFileSize = 4096;
       #keyFile = "/dev/sdf";
     };
   fileSystems."/storage" =
     { device = "/dev/sda1";
       fsType = "btrfs";

   swapDevices =
     [ { device = "/dev/disk/by-uuid/dc38c5c47-6ecf-4e85-a8b2-df2e73fd7a52"; }
     ];


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp12s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;

     networking.hostName = "yannik-pc";
     networking.networkmanager.enable = true;
     networking.extraHosts = ''
       127.0.0.1 localhost
     '';
     networking.firewall.enable = true;
     networking.firewall.allowPing = true;
     networking.defaultGateway = "192.168.178.1";
     networking.nameservers = [ "192.168.178.1" ];
     networking.interfaces.enp12s0 = {
       wakeOnLan.enable = true;
       ipv4.addresses = [{
         address = "192.168.178.21";
         prefixLength = 24;
       }];
     };
   powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
     #nvidia shibizzles
     hardware.opengl.enable = true;
     hardware.nvidia.package = config.boot.kernelPackages.nvidiaPackages.stable;
     hardware.nvidia.modesetting.enable = true;
     hardware.nvidia.forceFullCompositionPipeline = true;
 
     # steam shibizzles
     hardware.opengl.driSupport32Bit = true;
}

